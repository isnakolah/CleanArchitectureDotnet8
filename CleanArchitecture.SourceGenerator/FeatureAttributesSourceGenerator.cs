using System.Linq;
using Microsoft.CodeAnalysis; 

namespace CleanArchitecture.SourceGenerator;

[Generator]
public class FeatureAttributesSourceGenerator : IIncrementalGenerator
{
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        System.Diagnostics.Trace.WriteLine("Feature Attribute Source Generator is initializing...");
        System.Diagnostics.Debugger.Launch();

        var featureName = "Recipes";
        var featureDescription = "Feature for creating and managing recipes";
        var subFeatureNames = new[] { "Get", "Create", "Update", "Delete" };
        
        var attributeText = GenerateFeatureClass(featureName, featureDescription, subFeatureNames);
        
        context.RegisterPostInitializationOutput(ctx => ctx.AddSource($"{featureName}Feature.g.cs", attributeText));
        
        System.Diagnostics.Trace.WriteLine("Feature Attribute Source Generator has initialized.");
        
        // something might be missing here, but I'm not sure what
        
    }

    private static string GenerateFeatureClass(string featureName, string featureDescription, params string[] subFeatureNames)
    {
        var subFeatureAttributes = subFeatureNames
            .Select(subFeatureName => $"public sealed class {featureName}{subFeatureName}FeatureAttribute() : {featureName}FeatureAttribute({subFeatureName});")
            .ToArray();

        if (!subFeatureAttributes.Any())
        {
            subFeatureAttributes = [$"public sealed class {featureName}FeatureAttribute() : {featureName}FeatureAttribute({featureName});"
            ];
        }
        
        return $$"""
                 // <auto-generated />
                 #pragma warning disable 1591
                 
                 namespace CleanArchitecture.Application.FeatureFlags;

                 internal static class {{featureName}}Feature
                 {
                     public abstract class {{featureName}}FeatureAttribute(string subFeatureName)
                         : FeatureAttribute({{featureName}}, {{featureDescription}})
                     {
                         public string SubFeatureName { get; } = subFeatureName;
                     }
                     
                     {{string.Join("\n", subFeatureAttributes)}}
                 }
                 """;
    }
}

